import socket

HOST = '127.0.0.1'  # localhost
PORT = 20001        # порт по умолчанию

# Создаем сокет TCP/IP, используя семейство адресов IPv4 (AF_INET) и протокол TCP (SOCK_STREAM)
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    # Связываем сокет с заданным хостом и портом
    s.bind((HOST, PORT))
    # Переводим сокет в режим прослушивания (бэклог - это количество соединений в очереди, которые могут быть обработаны)
    s.listen(1)
    print('Сервер запущен и ожидает подключения...')
    # Ожидаем подключения клиента
    conn, addr = s.accept()
    print('Подключено к клиенту:', addr)
    # Бесконечный цикл для приема и отправки данных
    while True:
        # Принимаем данные от клиента, используя соединение conn. Максимальный размер буфера - 1024 байт
        data = conn.recv(1024)
        # Если данные не получены, значит клиент закрыл соединение, выходим из цикла
        if not data:
            break
        # Декодируем байты в строку (данные от клиента)
        message = data.decode('utf-8')
        # Получаем перевернутое сообщение, используя срез
        reversed_message = message[::-1]
        # Получаем сообщение в верхнем регистре, используя метод upper()
        uppercase_message = message.upper()
        # Получаем количество символов в сообщении, используя функцию len()
        message_length = str(len(message))
        # Создаем строку-ответ, включающую перевернутое сообщение, сообщение в верхнем регистре, количество символов и дополнение
        response = f'Перевернутое сообщение: {reversed_message}\nСообщение в верхнем регистре: {uppercase_message}\nКоличество символов в сообщении: {message_length}\nДополнение: Hello from server'
        # Отправляем ответ обратно клиенту, используя соединение conn
        conn.sendall(response.encode('utf-8'))
